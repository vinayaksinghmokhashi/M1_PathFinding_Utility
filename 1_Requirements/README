 * Decsription
## 1.	Introduction:
A project is composed of various different domains. Each domain has a set of functions to be carried out. In a project, all the resources available must be made available to all the domains and must be shared in a balanced way. Any imbalance in the resource distribution can cause delay in the completion of work leading to maximized cost. This problem addresses optimization of this kind of scenario.


## 2.	Problem statement:
        There is a cluster of computers. Each computer is referred as a      node. You are the maintainer of the cluster. Your job is to execute various jobs that you receive for execution. You can transfer a job from a node on the cluster to some other node. It will require some network cost. 
The jobs come in the batches. Each job will have its desired initial node on which it was thought to be run by its programmer. It will also require some processing power to run in a node. You have to process the jobs of the batch, i.e., you have to decide on which node the job should be executed. You can transfer the job through various nodes before assigning the final node. 
Being the cluster maintainer, your aim is to optimally use the resources of the cluster. You want the load on the nodes of the cluster to be balanced. Also, you don't want to spend a huge networking cost in transferring the jobs in between the nodes. 





2.1	Problem description:
To optimally use the resources of the cluster and want the load on the nodes of the cluster to be balanced and don't want to spend a huge networking cost in transferring the jobs in between the nodes.




2.2	Procedure:
2.2.1 Identify the problem:
To optimally use the resources of the cluster and want the load on the nodes of the cluster to be balanced and don't want to spend a huge networking cost in transferring the jobs in between the nodes.
   2.2.2 Understand the problem:
To optimally use the resources of the cluster and want the load on the nodes of the cluster to be balanced and don't want to spend a huge networking cost in transferring the jobs in between the nodes.












3.	Requirements:
Basically, requirements are statements that indicate what a system needs to do in order to provide a capability (i.e., utility or benefit.) Requirements are generally prepared during the early stages of a project's system development lifecycle (SDLC.) There are many different SDLC methodologies that are used in practice. [1]

3.1	High level requirements:
 A project's high-level requirements are the fundamental information that its stakeholders use to authorize and establish a project starting point. The project's stakeholders usually establish its high-level requirements in the early stages of planning and use a formal document named project charter to record them.[2]



3.2	Low level requirements:
Low-level requirements may be calculations, technical details, data manipulation and processing and other specific functionality that define what a system is supposed to accomplish in order to meet the high-level software requirements from which it is derived through software design analysis. [3]




4.	SWOT analyses:
SWOT analysis is a framework used to evaluate a one’s competitive position by identifying its strengths, weaknesses, opportunities and threats. Specifically, SWOT analysis is a foundational assessment models that measures what product/system/an organization can and cannot do, and its potential opportunities and threats. [4]



5.	4W’s and 1H:




